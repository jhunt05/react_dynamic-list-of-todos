{"version":3,"sources":["components/api/Fetching.js","components/user/User.js","components/todoItem/TodoItem.js","components/todoList/TodoList.js","components/buttons/Buttons.js","App.js","index.js"],"names":["todosUrl","usersUrl","fetchData","url","fetch","then","response","json","User","_ref","user","react_default","a","createElement","name","TodoItem","_ref$todo","todo","title","completed","user_User","TodoList","todos","className","map","todoItem_TodoItem","key","id","Buttons","sort","Fragment","onClick","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","loadData","setState","loading","Promise","all","_ref2","slicedToArray","todosItems","usersItems","todoList","_objectSpread","find","userId","getSortMethod","prevState","b","localeCompare","state","length","buttons_Buttons","todoList_TodoList","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.c793ba58.chunk.js","sourcesContent":["import React from 'react';\n\nconst todosUrl = 'https://jsonplaceholder.typicode.com/todos';\nconst usersUrl = 'https://jsonplaceholder.typicode.com/users';\n\nfunction fetchData(url) {\n  return fetch(url)\n    .then(response => response.json())\n}\n\nfunction fetchTodos() {\n  const todos = fetchData(todosUrl);\n  return todos;\n}\n\nfunction fetchUsers() {\n  const users = fetchData(usersUrl);\n  return users;\n}\n\nexport { fetchTodos, fetchUsers };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction User({ user }) {\n  return (\n    <span>{user.name}</span>\n  );\n}\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport User from '../user/User';\nimport PropTypes from 'prop-types';\n\nfunction TodoItem({ todo: { title, completed, user } }) {\n  return (\n    <tr>\n      <td>{title}</td>\n      <td>{completed ? 'Completed' : 'Working'}</td>\n      <td>\n        <User user={user} />\n      </td>\n    </tr>\n  );\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    user: PropTypes.object,\n  }).isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport TodoItem from '../todoItem/TodoItem';\nimport PropTypes from 'prop-types';\n\nfunction TodoList({ todos }) {\n  return (\n    <table className=\"ui celled table\">\n      <thead className=\"thead\">\n        <tr>\n          <th>TODO item</th>\n          <th>Status</th>\n          <th>User</th>\n        </tr>\n      </thead>\n      <tbody className=\"tbody\">\n        {todos.map(todo => (\n          <TodoItem todo={todo} key={todo.id} />\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Buttons({ sort }) {\n  return (\n    <>\n      <button\n        onClick={() => sort()}\n        className=\"ui button\"\n      >\n        Sort by Title\n      </button>\n      <button\n        onClick={() => sort('User')}\n        className=\"ui button\"\n      >\n        Sort by User name\n      </button>\n      <button\n        onClick={() => sort('Completed')}\n        className=\"ui button\"\n      >\n        Sort by Status\n      </button>\n    </>\n  );\n}\n\nButtons.propTypes = {\n  sort: PropTypes.func.isRequired,\n};\n\nexport default Buttons;\n","import React from 'react';\nimport './App.css';\n\nimport { fetchTodos, fetchUsers } from './components/api/Fetching';\nimport TodoList from './components/todoList/TodoList';\nimport Buttons from './components/buttons/Buttons';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      todoList: [],\n    }\n  }\n\n  loadData = () => {\n    this.setState({\n      loading: true,\n    });\n\n    Promise.all([fetchTodos(), fetchUsers()])\n      .then(([todosItems, usersItems]) => {\n        const todoList = todosItems.map(todo => ({\n          ...todo,\n          user: usersItems.find(user => user.id === todo.userId),\n        }));\n\n        this.setState({\n          todoList,\n          loading: false,\n        });\n      });\n  };\n\n  getSortMethod = (sort) => {\n    this.setState(prevState => ({\n      todoList: prevState.todoList.sort((a, b) => {\n        switch (sort) {\n          case 'User':\n            return a.user.name.localeCompare(b.user.name);\n          case 'Completed':\n            return b.completed - a.completed;\n          default:\n            return a.title.localeCompare(b.title);\n        }\n      }),\n    }));\n  };\n\n  render() {\n    if (!this.state.todoList.length) {\n      if (this.state.loading) {\n        return (\n          <button\n            className=\"ui basic loading button\"\n          onClick={this.loadData}\n          />\n        );\n      } else {\n        return (\n          <button\n            className=\"ui button\"\n            onClick={this.loadData}\n          >\n            Load Todo\n          </button>\n        );\n      }\n    }\n\n    return (\n      <>\n        <Buttons todos={this.state.todoList} sort={this.getSortMethod} />\n        <TodoList todos={this.state.todoList} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}